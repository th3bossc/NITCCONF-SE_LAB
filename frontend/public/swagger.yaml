openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/session/{id}:
    get:
      tags:
      - session-controller
      operationId: getSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
      security:
      - Bearer Authentication: []
    put:
      tags:
      - session-controller
      operationId: updateSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
      security:
      - Bearer Authentication: []
    delete:
      tags:
      - session-controller
      operationId: deleteSession
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
      - Bearer Authentication: []
  /api/session/status/rejected/{id}:
    put:
      tags:
      - session-controller
      operationId: updateStatusToRejected
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
      - Bearer Authentication: []
  /api/session/status/accepted/{id}:
    put:
      tags:
      - session-controller
      operationId: updateStatusToAccepted
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
      - Bearer Authentication: []
  /api/session/doc/{id}:
    get:
      tags:
      - session-controller
      operationId: getDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
      security:
      - Bearer Authentication: []
    put:
      tags:
      - session-controller
      operationId: uploadPdf
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
      security:
      - Bearer Authentication: []
  /api/profile:
    get:
      tags:
      - profile-controller
      operationId: profileDetails
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
      security:
      - Bearer Authentication: []
    put:
      tags:
      - profile-controller
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
      security:
      - Bearer Authentication: []
  /api/email/reset/{token}:
    put:
      tags:
      - email-controller
      operationId: resetPassword
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/tags:
    get:
      tags:
      - tag-controller
      operationId: FindAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
      security:
      - Bearer Authentication: []
    post:
      tags:
      - tag-controller
      operationId: newtag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tag'
      security:
      - Bearer Authentication: []
  /api/session:
    get:
      tags:
      - session-controller
      operationId: getAllSessions
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
      security:
      - Bearer Authentication: []
    post:
      tags:
      - session-controller
      operationId: newSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
      security:
      - Bearer Authentication: []
  /api/review/{id}:
    get:
      tags:
      - review-controller
      operationId: getReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
      security:
      - Bearer Authentication: []
    post:
      tags:
      - review-controller
      operationId: createReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
      - Bearer Authentication: []
  /api/email/reset:
    post:
      tags:
      - email-controller
      operationId: resetEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/email/resend:
    post:
      tags:
      - email-controller
      operationId: resendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/auth/register:
    post:
      tags:
      - auth-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /api/test:
    get:
      tags:
      - test-controller
      operationId: test
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/tags/{id}:
    get:
      tags:
      - tag-controller
      operationId: FindSessions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
      security:
      - Bearer Authentication: []
  /api/review/doc/{id}:
    get:
      tags:
      - review-controller
      operationId: getReviews
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
      security:
      - Bearer Authentication: []
  /api/profile/{id}:
    get:
      tags:
      - profile-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
      security:
      - Bearer Authentication: []
  /api/email/verify/{token}:
    get:
      tags:
      - email-controller
      operationId: verifyEmail
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    SessionRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        language:
          type: string
        level:
          type: string
          enum:
          - BEGINNER
          - INTERMEDIATE
          - ADVANCED
          - EXPERT
        status:
          type: string
          enum:
          - ACCEPTED
          - PENDING
          - REJECTED
        tags:
          type: array
          items:
            type: string
    DocumentVersion:
      required:
      - version
      type: object
      properties:
        id:
          type: string
        changesDesc:
          type: string
        version:
          type: integer
          format: int32
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    Review:
      type: object
      properties:
        id:
          type: string
        reviewer:
          $ref: '#/components/schemas/User'
        comment:
          type: string
    Session:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        language:
          type: string
        level:
          type: string
          enum:
          - BEGINNER
          - INTERMEDIATE
          - ADVANCED
          - EXPERT
        status:
          type: string
          enum:
          - ACCEPTED
          - PENDING
          - REJECTED
        date:
          type: string
          format: date-time
        documentVersions:
          type: array
          items:
            $ref: '#/components/schemas/DocumentVersion'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        role:
          type: string
          enum:
          - USER
          - REVIEWER
          - PROGRAM_COMMITTEE
        isVerified:
          type: boolean
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
    ProfileRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    ResetRequest:
      type: object
      properties:
        password:
          type: string
    TagRequest:
      type: object
      properties:
        title:
          type: string
    ReviewRequest:
      type: object
      properties:
        comment:
          type: string
    ResendRequest:
      type: object
      properties:
        email:
          type: string
    RegisterRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
  securitySchemes:
    Bearer Authentication:
      type: http
      scheme: bearer
      bearerFormat: JWT
